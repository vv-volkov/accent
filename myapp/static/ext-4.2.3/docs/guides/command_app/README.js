Ext.data.JsonP.command_app({"guide":"<h1>Using Sencha Cmd with Ext JS 4.2+</h1>\n<div class='toc'>\n<p><strong>Contents</strong></p>\n<ol>\n<li><a href='#!/guide/command_app-section-1'>Prerequisites</a></li>\n<li><a href='#!/guide/command_app-section-2'>Generating Your Application</a></li>\n<li><a href='#!/guide/command_app-section-3'>Building Your Application</a></li>\n<li><a href='#!/guide/command_app-section-4'>Sencha Cmd Web Server</a></li>\n<li><a href='#!/guide/command_app-section-5'>Extending Your Application</a></li>\n<li><a href='#!/guide/command_app-section-6'>Customizing The Build</a></li>\n<li><a href='#!/guide/command_app-section-7'>Upgrading Your Application</a></li>\n<li><a href='#!/guide/command_app-section-8'>Existing Applications</a></li>\n<li><a href='#!/guide/command_app-section-9'>Next Steps</a></li>\n</ol>\n</div>\n\n<p>This guide walks through the process of using <a href=\"http://www.sencha.com/products/sencha-cmd/\">Sencha Cmd</a>\nwith Ext JS 4.2 applications starting with the <code>sencha generate app</code> command and ending\nwith a running application.</p>\n\n<p>The process for upgrading an existing (non-Sencha Cmd) application to conform to the\nexpectations of Sencha Cmd is covered at the end of this guide. It is important to first\nunderstand the \"ideal\" or \"default\" structure as a point of comparison. The differences\nbetween this default structure and the structure of an existing application are what\ndrive the upgrade process for existing applications.</p>\n\n<h2 id='command_app-section-1'>Prerequisites</h2>\n\n<p>The following guides are recommended reading before proceeding further:</p>\n\n<ul>\n<li><a href=\"#!/guide/command\">Introduction to Sencha Cmd</a>.</li>\n</ul>\n\n\n<h2 id='command_app-section-2'>Generating Your Application</h2>\n\n<p>Our starting point is to generate an application skeleton. This is done using\nthe following command:</p>\n\n<pre><code>sencha generate app MyApp /path/to/MyApp\n</code></pre>\n\n<p><strong>Important:</strong> The above command must be able to determine the appropriate SDK. This can\nbe satisfied by either executing this command from a folder containing an extracted SDK\ndistribution or by using the <code>-sdk</code> switch like so:</p>\n\n<pre><code>sencha -sdk /path/to/SDK generate app MyApp /path/to/MyApp\n</code></pre>\n\n<p>The application files generated by this command should have the following structure:</p>\n\n<pre><code>.sencha/                    # Sencha-specific files (for example, configuration)\n    app/                    # Application-specific content\n        sencha.cfg          # Application configuration file for Sencha Cmd\n        build-impl.xml      # Standard application build script\n        plugin.xml          # Application-level plugin for Sencha Cmd\n    workspace/              # Workspace-specific content (see below)\n        sencha.cfg          # Workspace configuration file for Sencha Cmd\n        plugin.xml          # Workspace-level plugin for Sencha Cmd\n\next/                        # A copy of the Ext JS SDK\n    cmd/                    # Framework-specific content for Sencha Cmd\n        sencha.cfg          # Framework configuration file for Sencha Cmd\n    packages/               # Framework supplied packages\n        ext-theme-classic/  # Ext JS Theme Package for Classic\n        ext-theme-neptune/  # Ext JS Theme Package for Neptune\n        ...                 # Other theme and locale packages\n    src/                    # The Ext JS source\n    ext-*.js                # Pre-compiled and bootstrap files\n    ...\n\nindex.html                  # The entry point to your application\napp.json                    # Application descriptor\napp.js                      # Launches the Application class.\napp/                        # Your application's source code in MVC structure\n    model/                  # Folder for application model classes.\n    store/                  # Folder for application stores\n    view/                   # Folder for application view classes.\n        Main.js             # The initial default View\n    controller/             # Folder for application controllers.\n        Main.js             # The initial default Controller\n    Application.js          # The `<a href=\"#!/api/Ext.app.Application\" rel=\"Ext.app.Application\" class=\"docClass\">Ext.app.Application</a>` class\n\npackages/                   # Sencha Cmd packages\n\nbuild/                      # The folder where build output is placed.\n</code></pre>\n\n<p>There is no distinction between Workspace and app content in a single-page application. To\nlearn about Workspaces, see <a href=\"#!/guide/command_workspace\">Workspaces in Sencha Cmd</a>.</p>\n\n<h2 id='command_app-section-3'>Building Your Application</h2>\n\n<p>All that is required to build your application is to run the following command:</p>\n\n<pre><code>sencha app build\n</code></pre>\n\n<p><strong>Important.</strong> In order to execute this command, the current directory <strong>must</strong> be the\ntop-level folder of your application (in this case, <code>\"/path/to/MyApp\"</code>).</p>\n\n<p><strong>Important</strong> Do not specify the <code>-sdk</code> parameter for <code>sencha app</code> commands. Because\nthese commands must be run from the application's root folder, Sencha Cmd knows which SDK\nto use. Using <code>-sdk</code> on these commands causes Sencha Cmd to believe your current directory\nis the SDK specified which is not the proper current directory for an application.</p>\n\n<p>This command builds your markup page, JavaScript code, Sass and themes into the <code>\"build\"</code>\nfolder.</p>\n\n<h2 id='command_app-section-4'>Sencha Cmd Web Server</h2>\n\n<p>The Sencha Cmd web server lets you serve files from your applications directory.\nUse this command to start the web server:</p>\n\n<pre><code>sencha web start\n</code></pre>\n\n<p>This command uses default port 1841 and the current directory.\nThe web server runs until stopped with Ctrl+C or from another window with:</p>\n\n<pre><code>sencha web stop\n</code></pre>\n\n<p>To access the Sencha Cmd web server, use:</p>\n\n<pre><code>http://localhost:1841/\n</code></pre>\n\n<p>You can use the <code>-port</code> option to specify another port, and you can use the <code>-map</code>\noption to specify the path to another directory.</p>\n\n<h2 id='command_app-section-5'>Extending Your Application</h2>\n\n<p>The <code>sencha generate</code> command helps you quickly generate common MVC components such as\ncontrollers or models:</p>\n\n<pre><code>sencha help generate\n</code></pre>\n\n<p>You should see this:</p>\n\n<pre><code>Sencha Cmd vX.Y.Z.nnn\nsencha generate\n\nThis category contains code generators used to generate applications as well\nas add new classes to the application.\n\nCommands\n  * app - Generates a starter application\n  * controller - Generates a Controller for the current application\n  * form - Generates a Form for the current application (Sencha Touch Specific)\n  * model - Generates a Model for the current application\n  * package - Generates a starter package\n  * profile - Generates a Profile for the current application (Sencha Touch Specific)\n  * theme - Generates a theme page for slice operations (Ext JS Specific)\n  * view - Generates a View for the current application (Ext JS Specific)\n  * workspace - Initializes a multi-app workspace\n</code></pre>\n\n<p><strong>Important.</strong> In order to execute the commands discussed below, the current directory on\nthe console <strong>must</strong> be inside your application (in this case, \"/path/to/MyApp\").</p>\n\n<h3>Adding New Models</h3>\n\n<p>Adding a model to your application is done by making the <code>\"/path/to/MyApp\"</code> your current\ndirectory and running Sencha Cmd, like this:</p>\n\n<pre><code>cd /path/to/MyApp\nsencha generate model User id:int,name,email\n</code></pre>\n\n<p>This command adds a model class called <code>User</code> with the given 3 fields.</p>\n\n<p><strong>Note.</strong> This is the only <code>generate</code> command that is compatible with a\n<a href=\"http://www.sencha.com/products/architect/\">Sencha Architect</a> project. The typical use of\nthis command is to automate or script the creation of data models in Sencha Architect.</p>\n\n<h3>Adding New Controllers</h3>\n\n<p>Adding a controller is similar to adding a model:</p>\n\n<pre><code>cd /path/to/MyApp\nsencha generate controller Central\n</code></pre>\n\n<p>There are no other parameters in this case beyond the controller name.</p>\n\n<p><strong>Note.</strong> This command is <em>not</em> compatible with a\n<a href=\"http://www.sencha.com/products/architect/\">Sencha Architect</a> project.</p>\n\n<h3>Adding New Views</h3>\n\n<p>Adding a view to your application is also similar:</p>\n\n<pre><code>cd /path/to/MyApp\nsencha generate view SomeView\n</code></pre>\n\n<p>There are no other parameters in this case beyond the view name.</p>\n\n<p><strong>Note.</strong> This command is <em>not</em> compatible with a\n<a href=\"http://www.sencha.com/products/architect/\">Sencha Architect</a> project.</p>\n\n<h2 id='command_app-section-6'>Customizing The Build</h2>\n\n<p>There are various configuration options available in the <code>\".sencha/app/sencha.cfg\"</code> file.\nIn the case of a single-page application, it is best to ignore the <code>\".sencha/workspace\"</code>\nfolder, which also has a config file.</p>\n\n<h3>The classpath</h3>\n\n<p>The <code>sencha app build</code> command knows where to find the source of your application due to\nthe <code>app.classpath</code> configuration value stored in <code>\".sencha/app/sencha.cfg\"</code>. By default,\nthis value is:</p>\n\n<pre><code>app.classpath=${app.dir}/app,${app.dir}/app.js\n</code></pre>\n\n<p>Adding directories to this comma-separated list informs the compiler where to find the\nsource code required to build the application.</p>\n\n<h3>Further Reading</h3>\n\n<p>To learn more about the build process provided by Sencha Cmd, please refer to\n<a href=\"#!/guide/command_app_build\">Inside The App Build Process</a>.</p>\n\n<h2 id='command_app-section-7'>Upgrading Your Application</h2>\n\n<p>Generate applications include two basic kinds of content relevant to Sencha Cmd: build\nscripts (or scaffolding) and the important content of the used Sencha SDK's. As such, you\nwill occasionally need to upgrade these pieces. You can do this with the following\ncommand:</p>\n\n<pre><code>sencha app upgrade [ path-to-new-framework ]\n</code></pre>\n\n<p>The \"path-to-new-framework\" is optional and is used to upgrade both the Sencha Cmd\nscaffold <em>and</em> the framework used by the application.</p>\n\n<p>For details on the upgrade process, see <a href=\"#!/guide/command_app_upgrade\">Understanding App Upgrade</a>.</p>\n\n<h2 id='command_app-section-8'>Existing Applications</h2>\n\n<p>The key pieces of scaffold produced by Sencha Cmd are these:</p>\n\n<pre><code>.sencha/\napp.json\nbuild.xml\nindex.html\n</code></pre>\n\n<p>The first three of these can be simply copied from an application generated to a temp\nfolder. An existing application will typically have some markup entry page and if this is\nnot <code>\"index.html\"</code>, you can add the following to your <code>\"app.json\"</code>:</p>\n\n<pre><code>{\n    ...\n\n    \"indexHtmlPath\": \"index.php\"\n}\n</code></pre>\n\n<p>Naturally, the value should be whatever is correct for the application. In order for the\ngenerated build script to understand this markup file, however, the file should contain\nthe standard boilerplate found in the generated <code>\"index.html\"</code>:</p>\n\n<pre><code>&lt;!-- &lt;x-compile&gt; --&gt;\n    &lt;!-- &lt;x-bootstrap&gt; --&gt;\n        &lt;link rel=\"stylesheet\" href=\"bootstrap.css\"&gt;\n        &lt;script src=\"ext/ext-dev.js\"&gt;&lt;/script&gt;\n        &lt;script src=\"bootstrap.js\"&gt;&lt;/script&gt;\n    &lt;!-- &lt;/x-bootstrap&gt; --&gt;\n\n    &lt;script src=\"app.js\"&gt;&lt;/script&gt;\n&lt;!-- &lt;/x-compile&gt; --&gt;\n</code></pre>\n\n<p>The exact contents of the <code>script</code> tags may vary.</p>\n\n<h3>Configuration</h3>\n\n<p>There are probably several pieces of an existing application that will not match with the\ndefault structure of a Sencha Cmd application. At this point, there are two paths to\nconsider:</p>\n\n<ul>\n<li>Restructure the application to conform to the generated structure</li>\n<li>Configure the build process to match the application structure</li>\n</ul>\n\n\n<p>For details on how to configuring the build process, consult\n<a href=\"#!/guide/command_app_build\">Inside The App Build Process</a>.</p>\n\n<h3>Alternatives</h3>\n\n<p>If an existing application cannot be made to conform with the expectations of the build\nscript (either by restructuring the app or configuring the build), Sencha Cmd still has\nuseful functionality accessible via low-level commands.</p>\n\n<p>To implement a build process similar to that provided by Sencha Cmd (that is, for a single\npage), see the <a href=\"#!/guide/command_app_single\">Single-Page Ext JS Apps</a> guide.</p>\n\n<p>For more complex scenarios, possibly involving multiple pages, see the\n<a href=\"#!/guide/command_app_multi\">Multi-Page and Mixed Apps</a> guide.</p>\n\n<h2 id='command_app-section-9'>Next Steps</h2>\n\n<ul>\n<li><a href=\"#!/guide/command_code\">Compiler-Friendly Code Guidelines</a></li>\n<li><a href=\"#!/guide/command_packages\">Sencha Cmd Packages</a></li>\n<li><a href=\"#!/guide/command_workspace\">Workspaces in Sencha Cmd</a></li>\n<li><a href=\"#!/guide/command_app_upgrade\">Understanding App Upgrade</a></li>\n<li><a href=\"#!/guide/command_app_build\">Inside The App Build Process</a></li>\n<li><a href=\"#!/guide/command_advanced\">Advanced Sencha Cmd</a></li>\n</ul>\n\n","title":"Using Sencha Cmd with Ext JS"});